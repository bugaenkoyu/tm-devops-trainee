AWSTemplateFormatVersion: '2010-09-09'
Description: Add index.html to ECS Cluster.

Parameters:
  ImageId:
    Type: String
    Description: 'Ubuntu AMI for Frankfurt eu-central-1 Region'
    Default: 'ami-0faab6bdbac9486fb'

  InstanceType:
    Type: String
    Description: Choosing  t2 micro because it is free
    Default: t2.micro


Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroupIds:
        - !ImportValue ContainerSecurityGroup
      SubnetId: !ImportValue PublicSubnet1
      KeyName: 'devops-intern-key'
      UserData:
        Fn::Base64: |
          #!/bin/bash
          # Install AWS CLI
          sudo apt-get update
          sudo apt-get install -y awscli
          mkdir -p /home/ubuntu/.aws
          touch /home/ubuntu/.aws/config
          touch /home/ubuntu/.aws/credentials

          cat <<EOL > /home/ubuntu/.aws/config
          [default]
          region = eu-central-1
          EOL

          cat <<EOL > /home/ubuntu/.aws/credentials
          [default]
          aws_access_key_id = ffff
          aws_secret_access_key = fff
          EOL

          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb
          
          # Use AWS CLI or SDK to get the Container ID or Name<insert task ID here>
          CONTAINER_ID=$(aws ecs list-tasks --cluster tm-devops-trainee-cluster --desired-status RUNNING --output text --query 'taskArns[0]')
          aws ecs execute-command \
             --cluster tm-devops-trainee-cluster \
             --task $CONTAINER_ID \
             --container nginx \
             --interactive \
             --command "/bin/sh"
                  
          cd /usr/share/nginx/html/
          echo "<!DOCTYPE html><html><head><title>Hello, Techmagic!</title></head><body><h1>Hello, Techmagic!</h1></body></html>" > index.html

  EC2InstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: EC2Role

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ec2.amazonaws.com]
          Action: ['sts:AssumeRole']
          Condition:
            ArnLike:
              aws:SourceArn: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:*
            StringEquals:
              aws:SourceAccount: !Ref AWS::AccountId
      Path: /
      Policies:
      - PolicyName: ECSAccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - 'cloudwatch:DescribeAlarms'
              - 'cloudwatch:PutMetricAlarm'
              - 'ecs:DescribeServices'
              - 'ecs:UpdateService'
            Resource: '*'
